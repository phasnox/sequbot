# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-12 17:05
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Features',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption_features', models.BinaryField()),
                ('bio_features', models.BinaryField()),
                ('extracted', models.DateField()),
            ],
            options={
                'db_table': 'features',
            },
        ),
        migrations.CreateModel(
            name='InstagramApiError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_message', models.TextField()),
                ('response', models.BinaryField(blank=True, null=True)),
                ('stack_trace', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_api_error',
            },
        ),
        migrations.CreateModel(
            name='InstagramScrapAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(max_length=30)),
                ('cursor', models.TextField(blank=True, null=True)),
                ('username_ref', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'instagram_scrap_action',
            },
        ),
        migrations.CreateModel(
            name='InstagramTestSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ig_id', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=30)),
                ('profile_pic', models.TextField(blank=True, null=True)),
                ('snapshot', models.DateField()),
                ('incoming_status', models.CharField(blank=True, max_length=20, null=True)),
                ('outgoing_status', models.CharField(blank=True, max_length=20, null=True)),
                ('mark', models.CharField(blank=True, max_length=10, null=True)),
                ('followed_by_us', models.BooleanField(default=False)),
                ('unfollowed_by_us', models.BooleanField(default=False)),
                ('counts_vector', models.BinaryField(blank=True, null=True)),
                ('bio_vector', models.BinaryField(blank=True, null=True)),
                ('caption_vector', models.BinaryField(blank=True, null=True)),
                ('bio_score', models.FloatField(blank=True, null=True)),
                ('caption_score', models.FloatField(blank=True, null=True)),
                ('followed_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_test_subject',
            },
        ),
        migrations.CreateModel(
            name='InstagramUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ig_id', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=30)),
                ('profile_pic', models.TextField(blank=True, null=True)),
                ('raw_data', models.BinaryField(blank=True, null=True)),
                ('viewer', models.CharField(max_length=30)),
                ('fetched', models.DateField(blank=True, null=True)),
                ('media_count', models.IntegerField(blank=True, null=True)),
                ('follow_count', models.IntegerField(blank=True, null=True)),
                ('followed_by_count', models.IntegerField(blank=True, null=True)),
                ('is_private', models.BooleanField()),
                ('fake_profile', models.BooleanField(default=False)),
                ('has_media', models.BooleanField()),
                ('bio_words', models.BinaryField(blank=True, null=True)),
                ('caption_words', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'instagram_user',
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
                ('cookies', models.TextField(blank=True, null=True)),
                ('authenticated', models.BooleanField(default=False)),
                ('social_site', models.CharField(max_length=20)),
                ('social_site_id', models.CharField(blank=True, max_length=50, null=True)),
                ('followers_count', models.IntegerField(blank=True, null=True)),
                ('followings_count', models.IntegerField(blank=True, null=True)),
                ('media_count', models.IntegerField(blank=True, null=True)),
                ('data_gathered', models.DateTimeField(blank=True, null=True)),
                ('ai_params', models.BinaryField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'social_account',
            },
        ),
        migrations.AddField(
            model_name='instagramtestsubject',
            name='instagram_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sequbot_data.InstagramUser'),
        ),
        migrations.AddField(
            model_name='instagramtestsubject',
            name='social_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sequbot_data.SocialAccount'),
        ),
        migrations.AddField(
            model_name='instagramscrapaction',
            name='social_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sequbot_data.SocialAccount'),
        ),
        migrations.AddField(
            model_name='instagramapierror',
            name='social_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sequbot_data.SocialAccount'),
        ),
        migrations.AddField(
            model_name='features',
            name='social_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sequbot_data.SocialAccount'),
        ),
    ]
